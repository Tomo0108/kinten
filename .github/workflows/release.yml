name: Release Packages

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release tag (e.g. v1.0.1)'
        required: true
        default: 'v1.0.1'
  push:
    tags:
      - 'v*'

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref || inputs.version }}
  cancel-in-progress: false

jobs:
  build_macos:
    name: Build macOS package
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Enable macOS desktop
        run: flutter config --enable-macos-desktop

      - name: Show Flutter/Dart versions
        run: |
          flutter --version
          dart --version

      - name: Make scripts executable
        run: chmod +x scripts/*.sh

      - name: Build and package (macOS)
        run: bash scripts/package_macos.sh

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: kinten_macos
          path: package/kinten.zip
          if-no-files-found: error

  build_windows:
    name: Build Windows package
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop
        shell: bash

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build and package (Windows)
        run: scripts/package_windows.ps1
        shell: pwsh

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: kinten_windows
          path: package/kinten_windows.zip
          if-no-files-found: error

  release:
    name: Create/Update GitHub Release
    runs-on: ubuntu-latest
    needs: [build_macos, build_windows]
    steps:
      - name: Checkout (for release notes)
        uses: actions/checkout@v4

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: kinten_macos
          path: artifacts/macos

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: kinten_windows
          path: artifacts/windows

      - name: Determine tag
        id: tag
        run: |
          if [ -n "${{ github.ref_name }}" ] && [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ inputs.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Create/Update Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Kinten ${{ steps.tag.outputs.tag }}
          body_path: docs/RELEASE_NOTES.md
          draft: false
          prerelease: false
          make_latest: true
          files: |
            artifacts/macos/kinten.zip
            artifacts/windows/kinten_windows.zip